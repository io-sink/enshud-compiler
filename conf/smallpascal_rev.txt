Program ::= SPROGRAM $ProgramName SSEMICOLON $Block $CompoundStatements SDOT.
ProgramName ::= SIDENTIFIER.
Block ::= $VariableDeclaration $ProcedureDeclarations.
VariableDeclaration ::= [ SVAR $VariableDeclarations ].
VariableDeclarations ::= $VariableNames SCOLON $Type SSEMICOLON { $VariableNames SCOLON $Type SSEMICOLON }.
VariableNames ::= $VariableName { SCOMMA $VariableName }.
VariableName ::= SIDENTIFIER.
Type ::= $SimpleType | $ArrayType.
SimpleType ::= SINTEGER | SCHAR | SBOOLEAN.
ArrayType ::= SARRAY SLBRACKET $MinIndex SRANGE $MaxIndex SRBRACKET SOF $SimpleType.
MinIndex ::= $SignedInteger.
MaxIndex ::= $SignedInteger.
SignedInteger ::= [ $Sign ] SCONSTANT.
Sign ::= SPLUS | SMINUS.
ProcedureDeclarations ::= { $ProcedureDeclaration SSEMICOLON }.
ProcedureDeclaration ::= $ProcedureHead $VariableDeclaration $CompoundStatements.
ProcedureHead ::= SPROCEDURE $ProcedureName $TempParameter SSEMICOLON.
ProcedureName ::= SIDENTIFIER.
TempParameter ::= [ SLPAREN $TempParameters SRPAREN ].
TempParameters ::= $TempParameterNames SCOLON $SimpleType { SSEMICOLON $TempParameterNames SCOLON $SimpleType }.
TempParameterNames ::= $TempParameterName { SCOMMA $TempParameterName }.
TempParameterName ::= SIDENTIFIER.
CompoundStatements ::= SBEGIN $Statements SEND.
Statements ::= $Statement SSEMICOLON { $Statement SSEMICOLON }.
Statement ::= $SimpleStatement | SIF $Expression STHEN $CompoundStatements [ SELSE $CompoundStatements ] | SWHILE $Expression SDO $CompoundStatements.	// LL(1)文法にするためにelse句を統合

SimpleStatement ::= $AssignOrProcedureCallStatement | $IOStatement | $CompoundStatements.	// LL(1)文法にするために代入文と手続き呼び出し文を統合
AssignOrProcedureCallStatement ::= $AssignOrProcedureCallHead $AssignOrProcedureCallSuccessor.
AssignOrProcedureCallHead ::= SIDENTIFIER.
AssignOrProcedureCallSuccessor ::= $AssignSuccessor | $ProcedureCallSuccessor.
AssignSuccessor ::= [ SLBRACKET $Index SRBRACKET ] SASSIGN $Expression.
ProcedureCallSuccessor ::= [ SLPAREN $Expressions SRPAREN ].

Variable ::= $VariableName [ SLBRACKET $Index SRBRACKET ].		// LL(1)文法にするために純変数と添え字付き変数を統合
Index ::= $Expression
Expressions ::= $Expression { SCOMMA $Expression }.
Expression ::= $SimpleExpression [ $RelationalOperator $SimpleExpression ].
SimpleExpression ::= [ $Sign ] $Term { $AdditionOperator $Term }.
Term ::= $Factor { $MultiplicationOperator $Factor }.
Factor ::= $Variable | $Constant | SLPAREN $Expression SRPAREN | SNOT $Factor.
RelationalOperator ::= SEQUAL | SNOTEQUAL | SLESS | SLESSEQUAL | SGREATEQUAL | SGREAT.
AdditionOperator ::= SPLUS | SMINUS | SOR.
MultiplicationOperator ::= SSTAR | SDIVD | SMOD | SAND.
IOStatement ::= SREADLN [ SLPAREN $Variables SRPAREN ] | SWRITELN [ SLPAREN $Expressions SRPAREN ].
Variables ::= $Variable { SCOMMA $Variable }.
Constant ::= SCONSTANT | SSTRING | SFALSE | STRUE.
